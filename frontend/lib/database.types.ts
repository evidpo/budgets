/**
 * This file was automatically generated by Supabase CLI.
 * You should not edit this file manually.
 */

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export type Database = {
  public: {
    Tables: {
      accounts: {
        Row: {
          id: string
          household_id: string
          name: string
          type: Database['public']['Enums']['account_type']
          currency: string
          opening_balance: number
          is_archived: boolean
          note: string | null
          sort_order: number | null
          created_at: string
          updated_at: string
          version: number
        }
        Insert: {
          id?: string
          household_id: string
          name: string
          type: Database['public']['Enums']['account_type']
          currency?: string
          opening_balance?: number
          is_archived?: boolean
          note?: string | null
          sort_order?: number | null
          created_at?: string
          updated_at?: string
          version?: number
        }
        Update: {
          id?: string
          household_id?: string
          name?: string
          type?: Database['public']['Enums']['account_type']
          currency?: string
          opening_balance?: number
          is_archived?: boolean
          note?: string | null
          sort_order?: number | null
          created_at?: string
          updated_at?: string
          version?: number
        }
        Relationships: [
          {
            foreignKeyName: "accounts_household_id_fkey"
            columns: ["household_id"]
            referencedRelation: "households"
            referencedColumns: ["id"]
          }
        ]
      }
      budgets: {
        Row: {
          id: string
          household_id: string
          name: string
          amount: number
          period_type: Database['public']['Enums']['period_type']
          start_date: string
          end_date: string | null
          direction: Database['public']['Enums']['budget_direction']
          rollover: boolean
          include_subtree: boolean
          sort_order: number | null
          created_at: string
          updated_at: string
          version: number
        }
        Insert: {
          id?: string
          household_id: string
          name: string
          amount: number
          period_type: Database['public']['Enums']['period_type']
          start_date: string
          end_date?: string | null
          direction: Database['public']['Enums']['budget_direction']
          rollover?: boolean
          include_subtree?: boolean
          sort_order?: number | null
          created_at?: string
          updated_at?: string
          version?: number
        }
        Update: {
          id?: string
          household_id?: string
          name?: string
          amount?: number
          period_type?: Database['public']['Enums']['period_type']
          start_date?: string
          end_date?: string | null
          direction?: Database['public']['Enums']['budget_direction']
          rollover?: boolean
          include_subtree?: boolean
          sort_order?: number | null
          created_at?: string
          updated_at?: string
          version?: number
        }
        Relationships: [
          {
            foreignKeyName: "budgets_household_id_fkey"
            columns: ["household_id"]
            referencedRelation: "households"
            referencedColumns: ["id"]
          }
        ]
      }
      budget_accounts: {
        Row: {
          budget_id: string
          account_id: string
        }
        Insert: {
          budget_id: string
          account_id: string
        }
        Update: {
          budget_id?: string
          account_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "budget_accounts_account_id_fkey"
            columns: ["account_id"]
            referencedRelation: "accounts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "budget_accounts_budget_id_fkey"
            columns: ["budget_id"]
            referencedRelation: "budgets"
            referencedColumns: ["id"]
          }
        ]
      }
      budget_categories: {
        Row: {
          budget_id: string
          category_id: string
        }
        Insert: {
          budget_id: string
          category_id: string
        }
        Update: {
          budget_id?: string
          category_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "budget_categories_budget_id_fkey"
            columns: ["budget_id"]
            referencedRelation: "budgets"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "budget_categories_category_id_fkey"
            columns: ["category_id"]
            referencedRelation: "categories"
            referencedColumns: ["id"]
          }
        ]
      }
      categories: {
        Row: {
          id: string
          household_id: string
          parent_id: string | null
          name: string
          path: string
          icon: string | null
          color: string | null
          created_at: string
          updated_at: string
          version: number
        }
        Insert: {
          id?: string
          household_id: string
          parent_id?: string | null
          name: string
          path: string
          icon?: string | null
          color?: string | null
          created_at?: string
          updated_at?: string
          version?: number
        }
        Update: {
          id?: string
          household_id?: string
          parent_id?: string | null
          name?: string
          path?: string
          icon?: string | null
          color?: string | null
          created_at?: string
          updated_at?: string
          version?: number
        }
        Relationships: [
          {
            foreignKeyName: "categories_household_id_fkey"
            columns: ["household_id"]
            referencedRelation: "households"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "categories_parent_id_fkey"
            columns: ["parent_id"]
            referencedRelation: "categories"
            referencedColumns: ["id"]
          }
        ]
      }
      debts: {
        Row: {
          id: string
          household_id: string
          name: string
          counterparty: string | null
          opening_balance: number
          note: string | null
          created_at: string
          updated_at: string
          version: number
        }
        Insert: {
          id?: string
          household_id: string
          name: string
          counterparty?: string | null
          opening_balance?: number
          note?: string | null
          created_at?: string
          updated_at?: string
          version?: number
        }
        Update: {
          id?: string
          household_id?: string
          name?: string
          counterparty?: string | null
          opening_balance?: number
          note?: string | null
          created_at?: string
          updated_at?: string
          version?: number
        }
        Relationships: [
          {
            foreignKeyName: "debts_household_id_fkey"
            columns: ["household_id"]
            referencedRelation: "households"
            referencedColumns: ["id"]
          }
        ]
      }
      households: {
        Row: {
          id: string
          name: string
          created_at: string
          updated_at: string
          version: number
        }
        Insert: {
          id?: string
          name: string
          created_at?: string
          updated_at?: string
          version?: number
        }
        Update: {
          id?: string
          name?: string
          created_at?: string
          updated_at?: string
          version?: number
        }
        Relationships: []
      }
      members: {
        Row: {
          id: string
          household_id: string
          user_id: string
          role: Database['public']['Enums']['member_role']
          created_at: string
          updated_at: string
          version: number
        }
        Insert: {
          id?: string
          household_id: string
          user_id: string
          role: Database['public']['Enums']['member_role']
          created_at?: string
          updated_at?: string
          version?: number
        }
        Update: {
          id?: string
          household_id?: string
          user_id?: string
          role?: Database['public']['Enums']['member_role']
          created_at?: string
          updated_at?: string
          version?: number
        }
        Relationships: [
          {
            foreignKeyName: "members_household_id_fkey"
            columns: ["household_id"]
            referencedRelation: "households"
            referencedColumns: ["id"]
          }
        ]
      }
      rules: {
        Row: {
          id: string
          household_id: string
          type: Database['public']['Enums']['rule_type']
          priority: number
          category_id: string
          pattern: string
          is_active: boolean
          created_at: string
          updated_at: string
          version: number
        }
        Insert: {
          id?: string
          household_id: string
          type: Database['public']['Enums']['rule_type']
          priority: number
          category_id: string
          pattern: string
          is_active?: boolean
          created_at?: string
          updated_at?: string
          version?: number
        }
        Update: {
          id?: string
          household_id?: string
          type?: Database['public']['Enums']['rule_type']
          priority?: number
          category_id?: string
          pattern?: string
          is_active?: boolean
          created_at?: string
          updated_at?: string
          version?: number
        }
        Relationships: [
          {
            foreignKeyName: "rules_category_id_fkey"
            columns: ["category_id"]
            referencedRelation: "categories"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "rules_household_id_fkey"
            columns: ["household_id"]
            referencedRelation: "households"
            referencedColumns: ["id"]
          }
        ]
      }
      transactions: {
        Row: {
          id: string
          household_id: string
          user_id: string
          account_id: string
          category_id: string | null
          description: string
          amount: number
          type: Database['public']['Enums']['transaction_type']
          date: string
          payee: string
          note: string | null
          debt_id: string | null
          transfer_id: string | null
          member_id: string | null
          created_at: string
          updated_at: string
          version: number
        }
        Insert: {
          id?: string
          household_id: string
          user_id: string
          account_id: string
          category_id?: string | null
          description: string
          amount: number
          type: Database['public']['Enums']['transaction_type']
          date: string
          payee: string
          note?: string | null
          debt_id?: string | null
          transfer_id?: string | null
          member_id?: string | null
          created_at?: string
          updated_at?: string
          version?: number
        }
        Update: {
          id?: string
          household_id?: string
          user_id?: string
          account_id?: string
          category_id?: string | null
          description?: string
          amount?: number
          type?: Database['public']['Enums']['transaction_type']
          date?: string
          payee?: string
          note?: string | null
          debt_id?: string | null
          transfer_id?: string | null
          member_id?: string | null
          created_at?: string
          updated_at?: string
          version?: number
        }
        Relationships: [
          {
            foreignKeyName: "transactions_account_id_fkey"
            columns: ["account_id"]
            referencedRelation: "accounts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "transactions_category_id_fkey"
            columns: ["category_id"]
            referencedRelation: "categories"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "transactions_debt_id_fkey"
            columns: ["debt_id"]
            referencedRelation: "debts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "transactions_household_id_fkey"
            columns: ["household_id"]
            referencedRelation: "households"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "transactions_member_id_fkey"
            columns: ["member_id"]
            referencedRelation: "members"
            referencedColumns: ["id"]
          }
        ]
      }
      transfers: {
        Row: {
          id: string
          from_tx_id: string
          to_tx_id: string
          created_at: string
          updated_at: string
          version: number
        }
        Insert: {
          id?: string
          from_tx_id: string
          to_tx_id: string
          created_at?: string
          updated_at?: string
          version?: number
        }
        Update: {
          id?: string
          from_tx_id?: string
          to_tx_id?: string
          created_at?: string
          updated_at?: string
          version?: number
        }
        Relationships: [
          {
            foreignKeyName: "transfers_from_tx_id_fkey"
            columns: ["from_tx_id"]
            referencedRelation: "transactions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "transfers_to_tx_id_fkey"
            columns: ["to_tx_id"]
            referencedRelation: "transactions"
            referencedColumns: ["id"]
          }
        ]
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      calculate_accounts_with_balance: {
        Args: {
          household_id: string
        }
        Returns: {
          id: string
          household_id: string
          name: string
          type: Database['public']['Enums']['account_type']
          currency: string
          opening_balance: number
          is_archived: boolean
          note: string | null
          sort_order: number | null
          created_at: string
          updated_at: string
          version: number
          balance: number
        }
      }
      calculate_budget_available: {
        Args: {
          budget_id: string
          as_of_date: string
        }
        Returns: {
          budget_id: string
          spent: number
          income: number
          available: number
          carry_prev: number
          limit: number
        }
      }
      create_transfer: {
        Args: {
          from_account_id: string
          to_account_id: string
          amount: number
          date: string
          note: string
        }
        Returns: {
          from_tx: Json
          to_tx: Json
          transfer: Json
        }
      }
      import_transactions: {
        Args: {
          transactions_data: Json
          import_id: string
        }
        Returns: {
          success: boolean
          imported_count: number
        }
      }
      rollback_import: {
        Args: {
          import_id: string
        }
        Returns: {
          success: boolean
          rollback_count: number
        }
      }
    }
    Enums: {
      account_type: "cash" | "checking" | "savings" | "credit_card" | "investment" | "card" | "credit" | "other"
      budget_direction: "expense" | "income"
      member_role: "owner" | "editor" | "viewer"
      period_type: "daily" | "weekly" | "monthly" | "yearly" | "custom"
      rule_type: "payee" | "regex" | "amount_pattern"
      transaction_type: "income" | "expense"
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

export type Tables<
  PublicTableNameOrOptions extends
    | keyof (Database["public"]["Tables"] & Database["public"]["Views"])
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof (Database[PublicTableNameOrOptions["schema"]]["Tables"] &
        Database[PublicTableNameOrOptions["schema"]]["Views"])
    : never = never
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? (Database[PublicTableNameOrOptions["schema"]]["Tables"] &
      Database[PublicTableNameOrOptions["schema"]]["Views"])[TableName] extends {
      Row: infer R
    }
    ? R
    : never
  : PublicTableNameOrOptions extends keyof (Database["public"]["Tables"] &
      Database["public"]["Views"])
  ? (Database["public"]["Tables"] &
      Database["public"]["Views"])[PublicTableNameOrOptions] extends {
      Row: infer R
    }
    ? R
    : never
  : never

export type TablesInsert<
  PublicTableNameOrOptions extends
    | keyof Database["public"]["Tables"]
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicTableNameOrOptions["schema"]]["Tables"]
    : never = never
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? Database[PublicTableNameOrOptions["schema"]]["Tables"][TableName]["Insert"]
  : PublicTableNameOrOptions extends keyof Database["public"]["Tables"]
  ? Database["public"]["Tables"][PublicTableNameOrOptions]["Insert"]
  : never

export type TablesUpdate<
  PublicTableNameOrOptions extends
    | keyof Database["public"]["Tables"]
    | { schema: keyof Database }
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicTableNameOrOptions["schema"]]["Tables"]
    : never = never
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? Database[PublicTableNameOrOptions["schema"]]["Tables"][TableName]["Update"]
  : PublicTableNameOrOptions extends keyof Database["public"]["Tables"]
  ? Database["public"]["Tables"][PublicTableNameOrOptions]["Update"]
  : never

export type Enums<
  PublicEnumNameOrOptions extends
    | keyof Database["public"]["Enums"]
    | { schema: keyof Database },
  EnumName extends PublicEnumNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicEnumNameOrOptions["schema"]]["Enums"]
    : never = never
> = PublicEnumNameOrOptions extends { schema: keyof Database }
  ? Database[PublicEnumNameOrOptions["schema"]]["Enums"][EnumName]
  : PublicEnumNameOrOptions extends keyof Database["public"]["Enums"]
  ? Database["public"]["Enums"][PublicEnumNameOrOptions]
  : never